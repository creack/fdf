---
"on":
  push:
    branches:
      - main

# Allow only one concurrent deployment, skipping runs queued
# between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow
# these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job.
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: stable
      - run: go version
      - name: Build
        run: |
          GOOS=js GOARCH=wasm go build -o ./.github/assets/out.wasm .
          cp $(go env GOROOT)/misc/wasm/wasm_exec.js ./.github/assets
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: './.github/assets'

  # Deploy job.
  deploy:
    # Add a dependency to the build job.
    needs: build

    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment.
    permissions:
      pages: write     # to deploy to Pages.
      id-token: write  # to verify the deployment originates from an appropriate source.

    # Deploy to the github-pages environment.
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    # Specify runner + deployment step.
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v3
